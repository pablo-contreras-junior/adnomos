1. Receber e validar o arquivo no Controller
2. Salvar o arquivo no sistema de arquivos
3. Armazenar o caminho do arquivo no banco de dados


	// no controller:
	class FileController extends Controller {
	      public function upload(Request $request){


		    // validando:
		    $request->validate([
			'myFile' => 'required|file|mimes:jpg,png,pdf|max:2048' // 2048KB = 2MB
		    ]);


		    // armazenando o caminho do arquivo na pasta myFolder:
		    $filePath = $request->file('userFile')->store('myFolder','public'); // armazena o arquivo em Storage\App\Public


		    // salva o caminho do arquivo no banco:
		    $file = new UserFile()
		    $file->name = $request->file('userFile')->getClientOriginalName();
	   	    $file->path = $filePath;
		    $file->save()


	      }
	}

Usando o 'storage:link':
Depois de ter feito isso, devemos usar o comando    php artisan storage:link   , pois isso cria um atalho de tudo que está dentro de Storage\App\Public
para o diretório Public\Storage, tornando possível acessar seu conteudo com    asset('storage/'  .  $file->path).




OBS:
Caso o método validate() detecte um erro na validação, ele irá redireconar o usuário para a página anterior
— com erros — automaticamente. Caso tudo funcione corretamente, significa que os dados certamente são válidos.

OBS2:
'userFile' não é o nome do arquivo enviado pelo usuário, mas sim o valor 'name' do input HTML, usado para identificar
inputs.

OBS3:
store('myFolder','public') automaticamente cria o diretório   myFolder   dentro de Storage\App\Public, sem que seja necessário
criar manualmente.