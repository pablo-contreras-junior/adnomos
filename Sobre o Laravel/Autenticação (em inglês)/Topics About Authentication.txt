The Valitator Object:
Before creating a new record in the databse, it's good pratice to validate the retrived data. To suply this need, we have
the Validator object, which allows us to ensure that the user input meets the required criteria. 
Key methods:
	- fails() -> return 'true' if the data doesn't match the expected.
	- passes() -> return 'true' if the data match the required criteria.
	- withErrors() -> send an Error collection to the view.



The 'confirmed' Validation:
It require the form to have a "_confirmation" field. Then, Laravel checks if the two provided passwords are equal.
Example:
	<form
	   <input type="password" name="password">
	   <input type="password" name="password_confirmation">
	><form/>



The 'withErrors()' method:
Send an Error collection to the session. We can pass a default error message or a costum message by including it 
on an associative array: return back()->withErrors(['email', 'Invalid email or password']);
Example:
	@if($errors->any())
	   <div class="alert alert-danger">
	      <ul>
		 @foreach($errors->all() as $error)
		    <li>{{$error}}</li>
		 @endforeach
	      </ul>
	   </div>
	@endif
	